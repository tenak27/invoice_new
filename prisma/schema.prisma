generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      String
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Customer {
  id                String    @id @default(uuid())
  name              String
  email             String?
  phone             String?
  address           String
  taxId             String?
  registrationNumber String?
  taxRegime         String?
  legalForm         String?
  capital           String?
  bankDetails       String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  invoices          Invoice[]
  quotes            Quote[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  sku         String   @unique
  description String?
  price       Float
  quantity    Int
  minQuantity Int      @default(0)
  location    String?
  categoryId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Invoice {
  id         String   @id @default(uuid())
  number     String   @unique
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  status     String
  subtotal   Float
  tax        Float
  total      Float
  dueDate    DateTime
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Quote {
  id         String   @id @default(uuid())
  number     String   @unique
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  status     String
  subtotal   Float
  tax        Float
  total      Float
  validUntil DateTime
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}